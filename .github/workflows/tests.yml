name: tests

on: [push, pull_request]

jobs:
 tests:
  runs-on: ubuntu-latest

  services:
    mysql:
      image: mysql:5.7
      env:
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_DATABASE: testing
      ports:
        - 3306
      options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

  strategy:
   fail-fast: false
   matrix:
    php: [8.1]
    stability: [prefer-lowest, prefer-stable]
#    exclude:
#     - php: 8.0
#       stability: prefer-lowest

  name: PHP ${{ matrix.php }} - ${{ matrix.stability }}

  steps:
   - name: Checkout code
     uses: actions/checkout@v2
   - name: Setup PHP
     uses: shivammathur/setup-php@v2
     with:
      php-version: ${{ matrix.php }}
      tools: composer:v2, cs2pr
      coverage: none
   - name: Setup problem matchers for PHPUnit
     run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
   - name: Get composer cache directory
     id: composer-cache
     run: echo "::set-output name=dir::$(composer config cache-files-dir)"
   - name: Cache dependencies
     uses: actions/cache@v2
     with:
      path: ${{ steps.composer-cache.outputs.dir }}
      key: dependencies-${{ matrix.php }}-${{ matrix.stability }}-composer-${{ hashFiles('**/composer.lock') }}
      restore-keys: dependencies-${{ matrix.php }}-${{ matrix.stability }}-composer-
   - name: Install dependencies
     run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction
   #      - name: Check coding style
   #        run: php-cs-fixer fix --dry-run --allow-risky=true --format=checkstyle | cs2pr
   - name: Configure matchers for PHPUnit
     uses: mheap/phpunit-matcher-action@v1
   - name: Run PHP tests via PHPUnit
     run: vendor/bin/phpunit --teamcity
     env:
       DB_PORT: ${{ job.services.mysql.ports[3306] }}
